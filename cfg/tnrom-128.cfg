MEMORY {
    ZP:     file = "", start = $0000, size = $00FF, type = rw, define = yes;

    # 1k RAM Area
    RAM:    file = "", start = $0400, size = $0400, type = rw, define = yes;

    # 8k WRAM
    WRAM:   file = "", start = $7000, size = $2000, type = rw, define = yes;

    # iNES Cartridge Header
    HEADER: file = %O, start = $0000, size = $0010, fill = yes;

    # 16x 8K ROM Banks
    ROM0:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM1:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM2:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM3:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM4:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM5:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM6:   file = %O, start = $8000, size = $2000, fill = yes, define = yes;
    ROM7:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROM8:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROM9:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROMA:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROMB:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROMC:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROMD:   file = %O, start = $A000, size = $2000, fill = yes, define = yes;
    ROME:   file = %O, start = $C000, size = $2000, fill = yes, define = yes;
    ROMF:   file = %O, start = $E000, size = $1FFA, fill = yes, define = yes;

    # Hardware Vectors at End of ROM
    ROMV:   file = %O, start = $FFFA, size = $0006, fill = yes;
}

SEGMENTS {
  HEADER:   load = HEADER, type = ro;
  STARTUP:  load = ROMF,   type = ro,  define = yes;
  CODE:     load = ROMF,   type = ro,  define = yes;
  COMMON:   load = ROMF,   type = ro,  define = yes;
  RODATA:   load = ROME,   type = ro,  align=256, define = yes;
  VECTORS:  load = ROMV,   type = rw;
  PRGRAM:   load = WRAM,   type = rw,  align=256, define = yes;
  BSS:      load = RAM,    type = bss, align=256, define = yes;
  ZEROPAGE: load = ZP,     type = zp;
  BANK0:    load = ROM0,   type = ro,  align=256, optional=yes;
  BANK1:    load = ROM1,   type = ro,  align=256, optional=yes;
  BANK2:    load = ROM2,   type = ro,  align=256, optional=yes;
  BANK3:    load = ROM3,   type = ro,  align=256, optional=yes;
  BANK4:    load = ROM4,   type = ro,  align=256, optional=yes;
  BANK5:    load = ROM5,   type = ro,  align=256, optional=yes;
  BANK6:    load = ROM6,   type = ro,  align=256, optional=yes;
  BANK7:    load = ROM7,   type = ro,  align=256, optional=yes;
  BANK8:    load = ROM8,   type = ro,  align=256, optional=yes;
  BANK9:    load = ROM9,   type = ro,  align=256, optional=yes;
  BANKA:    load = ROMA,   type = ro,  align=256, optional=yes;
  BANKB:    load = ROMB,   type = ro,  align=256, optional=yes;
  BANKC:    load = ROMC,   type = ro,  align=256, optional=yes;
  BANKD:    load = ROMD,   type = ro,  align=256, optional=yes;
  BANKE:    load = ROME,   type = ro,  optional=yes;
  BANKF:    load = ROMF,   type = ro,  optional=yes;
}

